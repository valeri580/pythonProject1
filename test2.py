import requests
import telebot
import logging
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from dotenv import load_dotenv
import scv
import csv  # –†–∞–±–æ—Ç–∞ —Å CSV-—Ñ–∞–π–ª–∞–º–∏
from datetime import datetime  # –†–∞–±–æ—Ç–∞ —Å –¥–∞—Ç–æ–π/–≤—Ä–µ–º–µ–Ω–µ–º
from io import BytesIO
import pandas as pd  # –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
import matplotlib.pyplot as plt  # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
import os

# –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Telegram API
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, \
    ReplyKeyboardRemove
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext, MessageHandler, Filters, \
    ConversationHandler


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
VALERIADMIN_TG_BOT_API_KEY = os.getenv("VALERIADMIN_TG_BOT_API_KEY")
OPENWEATHER_API_KEY = os.getenv("OPENWEATHER_API_KEY")
CBR_API_URL = "https://www.cbr-xml-daily.ru/daily_json.js"
WEATHER_LOG_PATH = "weather_logs.csv"  # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ª–æ–≥–æ–≤ –ø–æ–≥–æ–¥–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
ADMIN_IDS = os.getenv("ADMIN_IDS")  # –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è ConversationHandler
WAIT_CITY, SHOW_INFO = range(2)  # –°–æ—Å—Ç–æ—è–Ω–∏—è: –æ–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –ø–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

#–°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤
if not os.path.exists(WEATHER_LOG_PATH):
    with open(WEATHER_LOG_PATH, 'w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerow(['timestamp', 'user_id', 'username', 'city', 'status'])
else:
    with open(WEATHER_LOG_PATH, 'r', encoding='utf-8') as f:
        first_line = f.readline().strip()
        if not first_line.startswith('timestamp') or 'user_id' not in first_line:
            with open(WEATHER_LOG_PATH, 'r+', encoding='utf-8') as f:
                content = f.read()
                f.seek(0, 0)
                f.write('timestamp,user_id,username,city,status\n' + content)


def log_weather_request(user_id: int, username: str, city: str, status: str):
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã –≤ CSV-–ª–æ–≥"""
    try:
        # –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        with open(WEATHER_LOG_PATH, 'a', newline='', encoding='utf-8') as file:
            writer = csv.writer(file)
            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
            writer.writerow([
                datetime.now().isoformat(),  # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
                user_id,  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                username,  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                city,  # –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π –≥–æ—Ä–æ–¥
                status  # –°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞: success/error/city_not_found
            ])
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥: {e}")


def create_reply_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏"""
    return ReplyKeyboardMarkup(
        [
            ["üå§Ô∏è –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É", "–ö–∞—Ç–∞–ª–æ–≥"],  # –ü–µ—Ä–≤—ã–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫
            ['üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã', "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"],  # –í—Ç–æ—Ä–æ–π —Ä—è–¥
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Å –∑–∞–ø—Ä–æ—Å–æ–º –¥–∞–Ω–Ω—ã—Ö
            [KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True),
             KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True)]
        ],
        resize_keyboard=True,  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"  # –ü–æ–¥—Å–∫–∞–∑–∫–∞ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    )


def create_profile_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –ø—Ä–æ—Ñ–∏–ª—è"""
    return ReplyKeyboardMarkup(
        [["‚úè–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"], ["–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]],
        resize_keyboard=True,  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
        one_time_keyboard=True  # –°–∫—Ä—ã—Ç–∏–µ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    )


def create_main_menu_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = [
        [
            # –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–≥–æ —Ä—è–¥–∞
            InlineKeyboardButton("üå§Ô∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É", callback_data='weather'),
            InlineKeyboardButton("üñ•Ô∏è –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç ZeroCoder", url="https://zerocoder.ru"),
        ],
        [
            # –ö–Ω–æ–ø–∫–∏ –≤—Ç–æ—Ä–æ–≥–æ —Ä—è–¥–∞
            InlineKeyboardButton("üí∂ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç", callback_data='currency'),
            InlineKeyboardButton("üí∞ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å", url="https://donate.com")
        ],
        [InlineKeyboardButton("‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data='close')]  # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    ]
    return InlineKeyboardMarkup(keyboard)  # –í–æ–∑–≤—Ä–∞—Ç —Ä–∞–∑–º–µ—Ç–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã


def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø —Ç–≤–æ–π –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫. –ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?",
        reply_markup=create_reply_keyboard()
    )
    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–º–µ–Ω—é
    update.message.reply_text(
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –º–µ–Ω—é: ",
        reply_markup=create_main_menu_keyboard()
    )


def button_click(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query  # –î–∞–Ω–Ω—ã–µ callback-–∑–∞–ø—Ä–æ—Å–∞
    query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è callback

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–≥–æ–¥—ã
    if query.data == "weather":
        query.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:",
            reply_markup=ReplyKeyboardRemove()  # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        )
        return WAIT_CITY  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
    elif query.data == 'currency':
        show_currency_rates(query)  # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∫–∞–∑–∞ –∫—É—Ä—Å–æ–≤
        return SHOW_INFO  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    elif query.data == 'back_to_menu':
        query.edit_message_text(
            text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: ",
            reply_markup=create_main_menu_keyboard()  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é
        )
        return ConversationHandler.END  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
    elif query.data == 'close':
        query.delete_message()  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ–Ω—é
        return ConversationHandler.END  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞

    return ConversationHandler.END  # –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è


def get_weather(update: Update, context: CallbackContext) -> int:
    """–ü–æ–ª—É—á–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ–≥–æ–¥—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞"""
    city = update.message.text  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    user = update.effective_user  # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_id = user.id if user else 0  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (0 –µ—Å–ª–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω)
    username = user.username or user.first_name or "Unknown"  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã
    url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY}&units=metric&lang=ru"

    try:
        response = requests.get(url)  # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ HTTP-–∑–∞–ø—Ä–æ—Å–∞
        data = response.json()  # –ü–∞—Ä—Å–∏–Ω–≥ JSON-–æ—Ç–≤–µ—Ç–∞

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        if response.status_code == 200:
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
            log_weather_request(user_id, username, city, 'success')

            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–≥–æ–¥–µ
            weather_info = (
                f"–ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
                f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {data['main']['temp']} ¬∞C\n"
                f"–°–æ—Å—Ç–æ—è–Ω–∏–µ: {data['weather'][0]['description']}\n"
                f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {data['main']['humidity']} %\n"
                f"–í–µ—Ç–µ—Ä: {data['wind']['speed']} –º/—Å"
            )
            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
            keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ
            update.message.reply_text(weather_info, reply_markup=InlineKeyboardMarkup(keyboard))
            return SHOW_INFO  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ "–≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        log_weather_request(user_id, username, city, 'city_not_found')
        update.message.reply_text("–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
        return WAIT_CITY  # –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –≥–æ—Ä–æ–¥–∞

    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –æ—à–∏–±–æ–∫
        log_weather_request(user_id, username, city, 'error')
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã: {e}")
        update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
        return ConversationHandler.END  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞


def show_currency_rates(query):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç"""
    try:
        response = requests.get(CBR_API_URL)  # –ó–∞–ø—Ä–æ—Å –∫ API –¶–ë
        data = response.json()  # –ü–∞—Ä—Å–∏–Ω–≥ JSON-–æ—Ç–≤–µ—Ç–∞
        rates = data['Valute']  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞–ª—é—Ç–∞—Ö

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –∫—É—Ä—Å–∞–º–∏
        text = (
            f"–ö—É—Ä—Å—ã –¶–ë –†–§:\n"
            f"–î–æ–ª–ª–∞—Ä USA: {rates['USD']['Value']:.2f} ‚ÇΩ\n"
            f"–ï–≤—Ä–æ: {rates['EUR']['Value']:.2f} ‚ÇΩ\n"
            f"–Æ–∞–Ω—å: {rates['CNY']['Value']:.2f} ‚ÇΩ\n"
        )
        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫—É—Ä—Å–∞–º–∏
        query.edit_message_text(
            text=text, reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç: {e}")
        query.edit_message_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç")


def cancel(update: Update, context: CallbackContext) -> int:
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
    update.message.reply_text("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=create_reply_keyboard())
    return ConversationHandler.END  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞


def weather_stats(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–≥–æ–¥—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)"""
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª
    admin_ids_list = [int(id.strip()) for id in ADMIN_IDS.split(",")]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º
    if update.effective_user.id not in admin_ids_list:
        update.message.reply_text("‚ö†Ô∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
        return

    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤
        if not os.path.exists(WEATHER_LOG_PATH) or os.path.getsize(WEATHER_LOG_PATH) == 0:
            update.message.reply_text("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ó–∞–ø—Ä–æ—Å—ã –µ—â–µ –Ω–µ –¥–µ–ª–∞–ª–∏—Å—å.")
            return

        # –ß—Ç–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤
        logs = []
        with open(WEATHER_LOG_PATH, 'r', encoding='utf-8') as f:
            reader = csv.reader(f)
            next(reader, None)  # –ü—Ä–æ–ø—É—Å–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞

            for row in reader:
                if not row:  # –ü—Ä–æ–ø—É—Å–∫ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫
                    continue
                # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–æ–∫ (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π)
                if len(row) < 5:
                    row += [''] * (5 - len(row))
                logs.append(row[:5])  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã—Ö 5 –∑–Ω–∞—á–µ–Ω–∏–π

        # –°–æ–∑–¥–∞–Ω–∏–µ DataFrame –∏–∑ –ª–æ–≥–æ–≤
        df = pd.DataFrame(logs, columns=['timestamp', 'user_id', 'username', 'city', 'status'])

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
        if df.empty:
            update.message.reply_text("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
            return

        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ user_id –≤ —á–∏—Å–ª–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç
        df['user_id'] = pd.to_numeric(df['user_id'], errors='coerce')

        # –†–∞—Å—á–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
        total_requests = len(df)  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤
        status_counts = df['status'].value_counts()  # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        success_requests = status_counts.get('success', 0)  # –£—Å–ø–µ—à–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        error_requests = status_counts.get('error', 0)  # –û—à–∏–±–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
        city_not_found = status_counts.get('city_not_found', 0)  # –ì–æ—Ä–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
        unique_users = df['user_id'].nunique()  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏

        # –¢–æ–ø-5 –≥–æ—Ä–æ–¥–æ–≤ (—Ç–æ–ª—å–∫–æ —É—Å–ø–µ—à–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã)
        popular_cities = df[df['status'] == 'success']['city'].value_counts().head(5)

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        report = (
            f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–≥–æ–¥—ã:\n"
            f"‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {total_requests}\n"
            f"‚Ä¢ –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {success_requests}\n"
            f"‚Ä¢ –û—à–∏–±–æ–∫ '–≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω': {city_not_found}\n"
            f"‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã—Ö –æ—à–∏–±–æ–∫: {error_requests}\n"
            f"‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {unique_users}\n\n"
            f"üèôÔ∏è –¢–æ–ø-5 –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –≥–æ—Ä–æ–¥–æ–≤:\n"
        )

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–æ—Ä–æ–¥–∞—Ö
        if not popular_cities.empty:
            for city, count in popular_cities.items():
                report += f"  - {city}: {count}\n"
        else:
            report += "  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≥–æ—Ä–æ–¥–∞—Ö\n"

        # –ê–Ω–∞–ª–∏–∑ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        try:
            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
            df['timestamp'] = pd.to_datetime(df['timestamp'], errors='coerce')
            df = df.dropna(subset=['timestamp'])

            if not df.empty:
                # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ
                df['date'] = df['timestamp'].dt.date
                daily_activity = df.groupby('date').size().reset_index(name='requests')
                # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ –≤—ã–±–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 7 –¥–Ω–µ–π
                daily_activity = daily_activity.sort_values('date', ascending=False).head(7)

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç—á–µ—Ç
                if not daily_activity.empty:
                    report += "\nüìÖ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π:\n"
                    for _, row in daily_activity.iterrows():
                        report += f"  {row['date']}: {row['requests']} –∑–∞–ø—Ä–æ—Å–æ–≤\n"
                else:
                    report += "\nüìÖ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n"
            else:
                report += "\nüìÖ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n"
        except Exception as e:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞–Ω–∞–ª–∏–∑–∞ –≤—Ä–µ–º–µ–Ω–∏
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {e}")
            report += "\nüìÖ –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        update.message.reply_text(report)

        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ)
        if not popular_cities.empty:
            plt.figure(figsize=(10, 6))  # –†–∞–∑–º–µ—Ä –≥—Ä–∞—Ñ–∏–∫–∞
            # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å—Ç–æ–ª–±—á–∞—Ç–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
            popular_cities.plot(kind='bar', color='skyblue')
            plt.title('–¢–æ–ø –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –≥–æ—Ä–æ–¥–æ–≤')  # –ó–∞–≥–æ–ª–æ–≤–æ–∫
            plt.ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤')  # –ü–æ–¥–ø–∏—Å—å –æ—Å–∏ Y
            plt.xticks(rotation=45, ha='right')  # –ù–∞–∫–ª–æ–Ω –ø–æ–¥–ø–∏—Å–µ–π
            plt.tight_layout()  # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∏–Ω–∞—Ä–Ω—ã–π –±—É—Ñ–µ—Ä
            buf = BytesIO()
            plt.savefig(buf, format='png', dpi=80)
            buf.seek(0)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            update.message.reply_photo(photo=buf)
            buf.close()  # –ó–∞–∫—Ä—ã—Ç–∏–µ –±—É—Ñ–µ—Ä–∞
            plt.close()  # –ó–∞–∫—Ä—ã—Ç–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞

    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–∏—Ö –æ—à–∏–±–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}", exc_info=True)
        update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    updater = Updater(VALERIADMIN_TG_BOT_API_KEY)  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Updater
    dispatcher = updater.dispatcher  # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤ –¥–ª—è –ø–æ–≥–æ–¥—ã
    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(button_click, pattern='^weather$')],  # –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
        states={
            WAIT_CITY: [MessageHandler(Filters.text & ~Filters.command, get_weather)],  # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
            SHOW_INFO: [CallbackQueryHandler(button_click)]  # –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        },
        fallbacks=[CommandHandler('cancel', cancel)],  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
        allow_reentry=True  # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
    )

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dispatcher.add_handler(conv_handler)  # –î–∏–∞–ª–æ–≥–∏ –ø–æ–≥–æ–¥—ã
    dispatcher.add_handler(CommandHandler("start", start))  # –ö–æ–º–∞–Ω–¥–∞ /start
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
    dispatcher.add_handler(CallbackQueryHandler(button_click, pattern='^(currency|back_to_menu|close)$'))
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    dispatcher.add_handler(CommandHandler("weather_stats", weather_stats))

    updater.start_polling()  # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ –æ–ø—Ä–æ—Å–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")  # –ó–∞–ø–∏—Å—å –≤ –ª–æ–≥
    updater.idle()  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏


if __name__ == '__main__':
    main()  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è