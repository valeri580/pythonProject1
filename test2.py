import requests
import telebot
import logging
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup
from dotenv import load_dotenv
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
VALERIADMIN_TG_BOT_API_KEY = os.getenv("VALERIADMIN_TG_BOT_API_KEY")
OPENWEATHER_API_KEY = os.getenv("OPENWEATHER_API_KEY")
CBR_API_URL = "https://www.cbr-xml-daily.ru/daily_json.js"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(VALERIADMIN_TG_BOT_API_KEY)


def main_menu():
    keyboard = [
        [InlineKeyboardButton("üå§ –ü–æ–≥–æ–¥–∞", callback_data='weather'),
         InlineKeyboardButton("üí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç", callback_data='currency')],
        [InlineKeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data='info')]
    ]
    return InlineKeyboardMarkup(keyboard)


def back_to_menu():
    keyboard = [
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data='back')]
    ]
    return InlineKeyboardMarkup(keyboard)


@bot.message_handler(commands=['start'])
def start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        bot.send_message(
            message.chat.id,
            "–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞—ë—Ç –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏ –ø–æ–≥–æ–¥—É!",
            reply_markup=main_menu()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ start: {e}", exc_info=True)


@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏"""
    try:
        if call.data == 'weather':
            bot.answer_callback_query(call.id)
            msg = bot.send_message(
                call.message.chat.id,
                "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:",
                reply_markup=back_to_menu()
            )
            bot.register_next_step_handler(msg, process_weather_city)

        elif call.data == 'currency':
            bot.answer_callback_query(call.id)
            show_currency_rates(call.message)

        elif call.data == 'info':
            bot.answer_callback_query(call.id)
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="‚ÑπÔ∏è –≠—Ç–æ —É—á–µ–±–Ω—ã–π –±–æ—Ç\n–í–µ—Ä—Å–∏—è 2.0",
                reply_markup=main_menu()
            )

        elif call.data == 'back':
            bot.answer_callback_query(call.id)
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞—ë—Ç –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏ –ø–æ–≥–æ–¥—É!",
                reply_markup=main_menu()
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ callback_handler: {e}", exc_info=True)
        bot.answer_callback_query(call.id, text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")


def process_weather_city(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–≥–æ–¥—ã"""
    try:
        city = message.text
        weather_data = get_weather(city)

        if weather_data == 404:
            msg = bot.send_message(
                message.chat.id,
                "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑:",
                reply_markup=back_to_menu()
            )
            bot.register_next_step_handler(msg, process_weather_city)
            return

        if weather_data:
            response = (f"–ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
                        f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(weather_data['temp'], 1)}¬∞C\n"
                        f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {round(weather_data['feels_like'], 1)}¬∞C\n"
                        f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_data['humidity']}%\n"
                        f"–û–ø–∏—Å–∞–Ω–∏–µ: {weather_data['description']}")
        else:
            response = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ"

        bot.send_message(
            message.chat.id,
            response,
            reply_markup=main_menu()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ process_weather_city: {e}", exc_info=True)
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")


def get_weather(city):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ"""
    try:
        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY}&units=metric&lang=ru"
        response = requests.get(url)

        if response.status_code == 404:
            return 404

        data = response.json()

        if response.status_code == 200:
            return {
                'temp': data['main']['temp'],
                'feels_like': data['main']['feels_like'],
                'humidity': data['main']['humidity'],
                'description': data['weather'][0]['description']
            }
        return None
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ get_weather: {e}", exc_info=True)
        return None


def show_currency_rates(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç"""
    try:
        rates = get_currency_rates()
        if rates:
            response = (f"–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¶–ë –†–§:\n"
                        f"üá∫üá∏ USD: {rates['USD']} —Ä—É–±.\n"
                        f"üá™üá∫ EUR: {rates['EUR']} —Ä—É–±.\n"
                        f"üá®üá≥ CNY: {rates['CNY']} —Ä—É–±.")
        else:
            response = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç"

        bot.send_message(
            message.chat.id,
            response,
            reply_markup=main_menu()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ show_currency_rates: {e}", exc_info=True)
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç")


def get_currency_rates():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –æ—Ç –¶–ë –†–§"""
    try:
        response = requests.get(CBR_API_URL)
        data = response.json()

        return {
            'USD': round(data['Valute']['USD']['Value'], 2),
            'EUR': round(data['Valute']['EUR']['Value'], 2),
            'CNY': round(data['Valute']['CNY']['Value'], 2)
        }
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ get_currency_rates: {e}", exc_info=True)
        return None


if __name__ == '__main__':
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    bot.polling(none_stop=True)